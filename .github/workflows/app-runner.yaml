
name: Deploy to App Runner - Source
on:
  push:
    # Trigger workflow on git push to main branch:
    branches: [ main ]
  # Allow manual invocation of the workflow:
  workflow_dispatch:
permissions:
  # The id-token permission is required for requesting the JWT:
  id-token: write
  # The contents permission is required for actions/checkout:
  contents: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REGION_NAME: ${{ secrets.AWS_REGION }}
      DYNAMO_DB_ACCESS_REQUESTS_TABLE_NAME: ${{ secrets.DYNAMODB_ACCESS_REQUESTS_TABLE_NAME }}
      COGNITO_CLIENT_ID_NAME: ${{ secrets.AWS_SECRET_COGNITO_CLIENT_ID_NAME }}
      COGNITO_CLIENT_ID_KEY: ${{ secrets.AWS_SECRET_COGNITO_CLIENT_ID_KEY }}
      COGNITO_USER_POOL_ID_NAME: ${{ secrets.AWS_SECRET_COGNITO_USER_POOL_ID_NAME }}
      COGNITO_USER_POOL_ID_KEY: ${{ secrets.AWS_SECRET_COGNITO_USER_POOL_ID_KEY }}
      DEA_TEST_ENVIRONMENT_URL_NAME: ${{ secrets.AWS_SECRET_DEA_TEST_ENVIRONMENT_URL_NAME }}
      DEA_TEST_ENVIRONMENT_URL_KEY: ${{ secrets.AWS_SECRET_DEA_TEST_ENVIRONMENT_URL_KEY }}
      DEA_DEV_ENVIRONMENT_URL_NAME: ${{ secrets.AWS_SECRET_DEA_DEV_ENVIRONMENT_URL_NAME }}
      DEA_DEV_ENVIRONMENT_URL_KEY: ${{ secrets.AWS_SECRET_DEA_DEV_ENVIRONMENT_URL_KEY }}
      DEA_PROD_ENVIRONMENT_URL_NAME: ${{ secrets.AWS_SECRET_DEA_PROD_ENVIRONMENT_URL_NAME }}
      DEA_PROD_ENVIRONMENT_URL_KEY: ${{ secrets.AWS_SECRET_DEA_PROD_ENVIRONMENT_URL_KEY }}
    steps:
      # 1. Configure AWS Credentials:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEV }}
          role-session-name: GITHUBACTIONSESSION
      # 2. Deploy application to App Runner:
      - name: Deploy to App Runner
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: app-runner-git-deploy-service
          source-connection-arn: ${{ secrets.AWS_CONNECTION_SOURCE_ARN }}
          repo: https://github.com/${{ github.repository }}
          branch: ${{ github.ref }}
          runtime: PYTHON_3
          build-command: cd scripts
          start-command: bash pserve-prod.sh
          port: 6543
          region: ${{ secrets.AWS_REGION }}
          cpu : 1
          memory : 2
          wait-for-service-stability-seconds: true
